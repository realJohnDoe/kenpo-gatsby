{"componentChunkName":"component---gatsby-philipps-foam-theme-src-templates-local-file-jsx","path":"/webcomponents","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"web-components\"\n  }, \"Web Components\"), mdx(\"p\", null, \"Web Components consist of three elemens:\"), mdx(\"h2\", {\n    \"id\": \"custom-elements\"\n  }, \"Custom Elements\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"class MyCustomElement extends HTMLElement {\\n  constructor() {\\n    // Always call super first in constructor\\n    super();\\n\\n    // Element functionality written in here\\n  }\\n\\n  // Invoked each time the custom element is appended into a document-connected element. This will happen each time the node is moved, and may happen before the element's contents have been fully parsed.\\n  connectedCallback() {}\\n\\n  // Invoked each time the custom element is disconnected from the document's DOM.\\n  disconnectedCallback() {}\\n\\n  // Invoked each time the custom element is moved to a new document.\\n  adoptedCallback() {}\\n\\n  // Invoked each time one of the custom element's attributes is added, removed, or changed. Which attributes to notice change for is specified in a static get observedAttributes method\\n  attributeChangedCallback() {}\\n\\n  static get observedAttributes() { \\n    return ['attr1', 'attr2']; \\n  }\\n}\\n\\ncustomElements.define('my-custom-element', MyCustomElement);\\n\")), mdx(\"p\", null, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"  <my-custom-element attr1=\\\"1\\\" attr2=\\\"test\\\"></my-custom-element>\\n\")), mdx(\"h2\", {\n    \"id\": \"shadow-dom\"\n  }, \"Shadow DOM\"), mdx(\"p\", null, \"Makes encapsulation possible, but not necessary.\"), mdx(\"p\", null, \"Keeps the markup structure, style, and behavior hidden and separate from other code on the page so that different parts do not clash, and the code can be kept nice and clean. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Attention!!! Outside styles will not work\")), mdx(\"p\", null, \"Two modes:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"open - accessable from js\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"closed - not accessable from js\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const shadow = elementRef.attachShadow({mode: 'open'});\\nconst shadow = elementRef.attachShadow({mode: 'closed'});\\n\")), mdx(\"p\", null, \"Append children:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"shadow.appendChild(element);\\n\")), mdx(\"p\", null, \"Standard elements as Video use the Shadow DOM for example.\"), mdx(\"h2\", {\n    \"id\": \"without-shadow-dom\"\n  }, \"Without Shadow DOM\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"this.appendChild(element);\\n// with template\\nthis.appendChild(template.content.cloneNode(true));\\n// query\\nthis.querySelector('.step-description').innerText = stepDescription;\\n\")), mdx(\"h2\", {\n    \"id\": \"html-templates-and-slots\"\n  }, \"HTML Templates and Slots\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const template = document.createElement('template');\\ntemplate.innerHTML = `\\n<template id=\\\"my-paragraph\\\">\\n  <p>My paragraph</p>\\n</template>\\n`;\\n\\nclass extends HTMLElement {\\n  constructor() {\\n    super();\\n\\n    const shadowRoot = this.attachShadow({mode: 'open'})\\n      .appendChild(template.cloneNode(true));\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"full-example\"\n  }, \"Full Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const template = document.createElement('template');\\ntemplate.innerHTML = `\\n  <style>\\n  </style>\\n  <span class=\\\"change-me\\\"></span>\\n`;\\n\\nclass MyComponent extends HTMLElement {\\n  constructor() {\\n    super();\\n    this.attachShadow({ mode: 'open' });\\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\\n  }\\n\\n  connectedCallback() {\\n    this.text = this.getAttribute('text');\\n    this.shadowRoot.querySelector('.change-me').innerHTML = this.text;\\n  }\\n}\\n\\nwindow.customElements.define('my-component', MyComponent);\\n\")), mdx(\"h2\", {\n    \"id\": \"read-more\"\n  }, \"Read more\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://goo.gle/building-ui-devtools\"\n  }, \"Google Guide to Web-Components in DevTools\"))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":1,"value":"Web Components"},{"depth":2,"value":"Custom Elements"},{"depth":2,"value":"Shadow DOM"},{"depth":2,"value":"Without Shadow DOM"},{"depth":2,"value":"HTML Templates and Slots"},{"depth":2,"value":"Full Example"},{"depth":2,"value":"Read more"}],"outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/webcomponents","title":"Web Components"}}},"pageContext":{"id":"f9e4d45c-cbb8-5f91-813c-3c8fc859b403"}},"staticQueryHashes":["1968664781","2221750479","2468095761","2557268104","3120354889","654337312"]}