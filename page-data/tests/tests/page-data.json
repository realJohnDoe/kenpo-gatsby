{"componentChunkName":"component---gatsby-philipps-foam-theme-src-templates-local-file-jsx","path":"/tests/tests","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tests\"\n  }, \"Tests\"), mdx(\"p\", null, \"Stuff that is prone to errors and other stuff...\"), mdx(\"p\", null, \"\", mdx(\"foamlink\", {\n    parentName: \"p\"\n  }, \"lots-of-code\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":1,"value":"Tests"}],"outboundReferences":[{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"multiple-github-ssh-keys\"\n  }, \"Multiple GitHub SSH Keys\"), mdx(\"p\", null, \"This site has many code frames:\"), mdx(\"h2\", {\n    \"id\": \"generate-new-ssh-key\"\n  }, \"Generate new SSH Key\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"cd ~/.ssh\\nssh-keygen -t ed25519 -C \\\"your@email.address\\\"\\n\")), mdx(\"p\", null, \"Please choose a describing name!\"), mdx(\"h2\", {\n    \"id\": \"add-key-to-repo\"\n  }, \"Add key to repo\"), mdx(\"p\", null, \"Go to github repo under settings -> Deploy Keys -> Add deploy key and add the content of the generated public key (.pub file extension).\"), mdx(\"p\", null, \"Write rights are mostly enough.\"), mdx(\"h2\", {\n    \"id\": \"edit-ssh-config\"\n  }, \"Edit SSH config\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"nano ~/.ssh/config\\n\")), mdx(\"p\", null, \"Add your entry like the second one:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"# Default github key for main Repo\\nHost github.com\\n   HostName github.com\\n   IdentityFile ~/.ssh/id_ed25519\\n   IdentitiesOnly yes\\n\\n# Other github key for other repo\\nHost github-other-repo\\n   HostName github.com\\n   IdentityFile ~/.ssh/other-repo-key\\n   IdentitiesOnly yes\\n\")), mdx(\"h2\", {\n    \"id\": \"clone-repo\"\n  }, \"Clone Repo\"), mdx(\"p\", null, \"Go to the desired location and clone with ssh and replace the host with the created one:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"git clone git@github-other-repo:user/other-repo.git\\n\")), mdx(\"p\", null, \"Or add origin:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"git remote add origin git@github-other-repo:user/other-repo.git\\n\")), mdx(\"h2\", {\n    \"id\": \"set-username\"\n  }, \"Set username\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"git config user.name \\\"My cool server repo\\\"\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"id":"baaabbc5-5114-565c-9573-bfb84e83d74e","fields":{"slug":"/tests/lots-of-code","title":"Multiple GitHub SSH Keys"}}}],"inboundReferences":[]},"fields":{"slug":"/tests/tests","title":"Tests"}}},"pageContext":{"id":"66d45f72-6ece-58ba-8789-25c7438cb70a"}},"staticQueryHashes":["1968664781","2221750479","2468095761","2557268104","3120354889","654337312"]}